   pipeline {

    parameter{

        choice(name: 'PROJECT_ID', choices: 'mediawiki', description: 'Select the project in which the resources will be created')
        ctext(name: 'DATABASE_IMAGE_TAG', defaultValue: 'latest', description: 'Enter the image tag')
    }
    
     
     environment {
                       DEPLOY_ENV   =   "${env.BRANCH_NAME == 'master' ? 'prod': env.BRANCH_NAME}"
    				   GOOGLE_APPLICATION_CREDENTIALS = credentials("${env.BRANCH_NAME}-credentials")
                       
                   }

             
 	agent any
               stages 
  				{

                         stage('Resource Deployment') 
                         {
                             steps {
                                 dir ("${WORKSPACE}/database/") {
                             sh '''
                                   
                                  gcloud auth activate-service-account --key-file "${GOOGLE_APPLICATION_CREDENTIALS}"
                                  gcloud config set project "${PROJECT_ID}"
                                  docker login -u oauth2accesstoken -p "$(gcloud auth print-access-token)" https://.gcr.io
                                  docker build -t database .
                                  docker tag mediawiki gcr.io/"${PROJECT_ID}"/database:"${DATABASE_IMAGE_TAG}"
                                  docker push gcr.io/"${PROJECT_ID}"/database:"${DATABASE_IMAGE_TAG}"
                                  cd ..
                                  kubectl create -f database-deployment.yaml -n database
                                  kubectl create -f database-service.yaml -n database
                               '''
                                    }   
                        }
                  
                      
                   }

 
                  }

  					post 
  					{
                        always {
                            echo 'The code ran & initiated a build!'
                            

                            emailext body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
                                recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                                subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}" , to: 'awasthisamriddhi93@gmail.com'

                           echo 'email send'

                           
         
          					}
                    }
  
			}
                                